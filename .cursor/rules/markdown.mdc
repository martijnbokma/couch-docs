---
description: "Comprehensive style guide for CouchCMS documentation"
globs: ["**/*.md", "**/*.mdx"]
alwaysApply: true
---

# CouchCMS Documentation Style Guide

This comprehensive style guide outlines all rules for writing CouchCMS documentation.
The primary goals are consistency, readability, maintainability, and accessibility.

## 1. Document Structure

### 1.1 Required Frontmatter

Every document MUST begin with frontmatter:

```yaml title="Required Frontmatter"
---
title: Document Title # 50-60 chars
description: "A clear, concise description" # 150-160 chars
keywords: # 3-5 relevant terms
    - keyword1
    - keyword2
    - keyword3
category: tag
subCategory: editable # Required for tutorials
author: First Last
lastUpdated: YYYY-MM-DD
sidebar:
    order: N # Lower numbers appear first
    badge:
        text: New|Beta|Deprecated
        variant: tip|caution|danger
---
```

SEO Requirements:

- Title: 50-60 characters, include main keyword
- Description: 150-160 characters, clear and descriptive
- Keywords: 3-5 relevant terms
- Use descriptive slugs for URLs
- Include meta descriptions

### 1.2 Document Layout

1. Frontmatter
2. Import statements
3. Brief introduction
4. Main content
5. Related content links

Spacing:

- Two blank lines between major sections (H2)
- One blank line between subsections (H3, H4)
- One blank line before/after code blocks and admonitions

## 2. Content Formatting

### 2.1 Text Elements

Use consistent formatting:

- Backticks (`) for:
    - Variables: `my_variable`
    - Parameters: `type`, `name`
    - File paths: `views/template.php` (use forward slashes)
    - Code snippets: `echo $value`
    - HTML tags: `<div>`
    - Technical terms: `dropdown`
    - Boolean values: `true`, `false`
    - Filenames: `file.php`
- Underscores (\_) for italic text:
    - Output values: _Rental_
    - Emphasis: _important_
    - Quoted values: The value _true_
- Double asterisks (\*\*) for bold text:
    - Section headers
    - Critical warnings
    - Important notes
- Never mix styles (e.g., don't use both \* and ` for same term)

### 2.2 Code Examples

- Include complete, working examples
- Add descriptive titles
- Use proper syntax highlighting
- Add comments for complex code
- Show changes with diff syntax when relevant:

```diff title="Code Changes"
- old code
+ new code
```

For partial code, use language-appropriate markers:

```php
// ... existing code ...
```

```html
<!-- ... existing code -->
```

```css
/* ... existing code */
```

### 2.3 Version Documentation

Use version badges to indicate feature availability:

```markdown title="Version Example"
:::version[v2.0+]
Feature available from v2.0 onwards
:::

:::caution[Breaking Changes]
Version 2.1 changes:

- Change 1
- Change 2
  :::
```

### 2.4 Components

Import components at the top after frontmatter:

```markdown title="Component Example"
---
title: Page Title
---

import { Steps } from '@astrojs/starlight/components';

<Steps>
1. First step
2. Second step
</Steps>
```

### 2.5 Images

Requirements:

- Descriptive alt text explaining content/purpose
- Caption in quotes after URL for screen readers
- Max width: 1200px for screenshots, 300px for thumbnails
- WebP format preferred
- Optimize for web
- Avoid using images for text content
- Ensure sufficient resolution

Format: `feature-action-context.webp`

```markdown title="Image Example"
![Login Form](./login.webp "Form showing validation error message")
```

### 2.6 Links and References

Internal links:

- Use relative paths
- Include meaningful text that indicates destination
- Add context in quotes after URL
- Never use "click here" or "read more"
- Ensure links are distinguishable
- Use proper hierarchy in navigation

```markdown title="Link Examples"
[User Authentication](../auth/guide.md "Complete setup guide")
[CouchCMS Documentation](https://docs.couchcms.com)
```

### 2.7 Lists and Tables

Lists:

- Use `-` for unordered lists
- 4 spaces indentation
- Parallel structure
- Group related items
- Blank lines between groups

Tables:

- Left-align text (`:---`)
- Right-align numbers (`---:`)
- Center headers (`:-:`)
- Use backticks for code
- Use `-` for empty cells

### 2.8 Admonitions

```markdown title="Admonition Examples"
:::note[Info]
Additional context
:::

:::tip[Best Practice]
Recommended approach
:::

:::caution[Warning]
Important limitation
:::

:::danger[Critical]
Data loss risk
:::
```

Rules:

- Include descriptive title
- Keep focused and concise
- Use appropriate type
- Don't nest
- Consistent formatting inside

## 3. Quality Standards

✅ Complete frontmatter with SEO-friendly content
✅ Proper heading hierarchy (no skipped levels)
✅ Descriptive titles and headings
✅ Technical terms in backticks
✅ Valid and meaningful links
✅ Clear image descriptions and alt text
✅ Consistent spacing and formatting
✅ Working code examples
✅ Helpful admonitions
✅ Accessible content structure

## 4. Best Practices

1. Keep technical terminology consistent
2. Use clear, concise language
3. Provide working code examples
4. Include proper navigation
5. Maintain consistent formatting
6. Add helpful admonitions
7. Use descriptive titles
8. Include complete documentation

## 5. Code Preservation

1. Never modify code unless instructed
2. Keep exact spacing and format
3. Preserve attribute order in HTML
4. Maintain original line breaks
5. Use language-appropriate markers for partial code:
    - PHP: `// ... existing code ...`
    - HTML: `<!-- ... existing code ... -->`
    - CSS: `/* ... existing code ... */`
6. Keep original language specs and titles
7. Preserve quote styles (single/double)

Example:

```html title="Form Example"
<form method="post" action="contact.php">
    Name: <input type="text" name="name" />
    <!-- ... existing code ... -->
    <input type="submit" value="Send" />
</form>
```

## 6. Cross-referencing

### 6.1 Internal Links

Use relative paths with descriptive text:

```markdown title="Internal Link Examples"
[Learn about User Authentication](../authentication/overview.md)
[See Configuration Options](../config/options.md)
```

### 6.2 Related Content

End documents with related content section:

```markdown title="Related Content Section"
---

## Related Content

:::related

- [Topic One](../topic-one/) - Brief description
- [Topic Two](../topic-two/) - Brief description
  :::
```

## 7. Common Corrections

Fix common spelling mistakes:

| Incorrect   | Correct      |
| ----------- | ------------ |
| neccessary  | necessary    |
| additionaly | additionally |
| permenantly | permanently  |
| fidelety    | fidelity     |
| incidently  | incidentally |
| seperate    | separate     |
